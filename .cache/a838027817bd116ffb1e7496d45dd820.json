{"dependencies":[{"name":"/Users/hansi/workdir/parcel-experiment/package.json","includedInParent":true,"mtime":1690295309730},{"name":"/Users/hansi/workdir/parcel-experiment/node_modules/date-fns/esm/formatDistanceToNowStrict/package.json","includedInParent":true,"mtime":1690293552471},{"name":"../formatDistanceStrict/index.js","loc":{"line":1,"column":33}},{"name":"../_lib/requiredArgs/index.js","loc":{"line":2,"column":25}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = formatDistanceToNowStrict;\n\nvar _index = require(\"../formatDistanceStrict/index.js\");\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require(\"../_lib/requiredArgs/index.js\");\n\nvar _index4 = _interopRequireDefault(_index3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name formatDistanceToNowStrict\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNowStrict(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNowStrict(\n *   new Date(2015, 0, 1, 0, 0, 15)\n * )\n * //=> '15 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in 1 year'\n *\n * @example\n * // If today is 28 January 2015,\n * // what is the distance to 1 January 2015, in months, rounded up??\n * const result = formatDistanceToNowStrict(new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {locale: eoLocale}\n * )\n * //=> '1 jaro'\n */\nfunction formatDistanceToNowStrict(dirtyDate, options) {\n  (0, _index4.default)(1, arguments);\n  return (0, _index2.default)(dirtyDate, Date.now(), options);\n}","map":{"mappings":[{"name":"formatDistanceToNowStrict","generated":{"line":6,"column":18},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":77,"column":24}},{"generated":{"line":8,"column":0},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":2,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":3,"column":0}},{"generated":{"line":92,"column":0},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":77,"column":15}},{"name":"formatDistanceToNowStrict","generated":{"line":92,"column":9},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":77,"column":24}},{"generated":{"line":92,"column":34},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":77,"column":15}},{"name":"dirtyDate","generated":{"line":92,"column":35},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":77,"column":50}},{"generated":{"line":92,"column":44},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":77,"column":15}},{"name":"options","generated":{"line":92,"column":46},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":77,"column":61}},{"generated":{"line":92,"column":53},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":77,"column":15}},{"generated":{"line":92,"column":55},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":77,"column":70}},{"generated":{"line":93,"column":0},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":78,"column":2}},{"generated":{"line":93,"column":23},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":78,"column":15}},{"generated":{"line":93,"column":24},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":78,"column":2}},{"name":"arguments","generated":{"line":93,"column":26},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":78,"column":18}},{"generated":{"line":93,"column":35},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":78,"column":2}},{"generated":{"line":94,"column":0},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":79,"column":2}},{"generated":{"line":94,"column":9},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":79,"column":9}},{"name":"dirtyDate","generated":{"line":94,"column":30},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":79,"column":30}},{"generated":{"line":94,"column":39},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":79,"column":9}},{"name":"Date","generated":{"line":94,"column":41},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":79,"column":41}},{"name":"now","generated":{"line":94,"column":46},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":79,"column":46}},{"generated":{"line":94,"column":49},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":79,"column":41}},{"generated":{"line":94,"column":51},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":79,"column":9}},{"name":"options","generated":{"line":94,"column":53},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":79,"column":53}},{"generated":{"line":94,"column":60},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":79,"column":9}},{"generated":{"line":94,"column":61},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":79,"column":2}},{"generated":{"line":95,"column":0},"source":"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","original":{"line":80,"column":1}}],"sources":{"node_modules/date-fns/esm/formatDistanceToNowStrict/index.js":"import formatDistanceStrict from \"../formatDistanceStrict/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatDistanceToNowStrict\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNowStrict(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNowStrict(\n *   new Date(2015, 0, 1, 0, 0, 15)\n * )\n * //=> '15 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in 1 year'\n *\n * @example\n * // If today is 28 January 2015,\n * // what is the distance to 1 January 2015, in months, rounded up??\n * const result = formatDistanceToNowStrict(new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {locale: eoLocale}\n * )\n * //=> '1 jaro'\n */\nexport default function formatDistanceToNowStrict(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  return formatDistanceStrict(dirtyDate, Date.now(), options);\n}"},"lineCount":null}},"hash":"75a2097509e5662afb19709b55c3679e","cacheData":{"env":{}}}