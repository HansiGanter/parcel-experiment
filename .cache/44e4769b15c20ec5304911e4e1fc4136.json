{"dependencies":[{"name":"/Users/hansi/workdir/parcel-experiment/package.json","includedInParent":true,"mtime":1690295309730},{"name":"/Users/hansi/workdir/parcel-experiment/node_modules/date-fns/esm/getDate/package.json","includedInParent":true,"mtime":1690293552579},{"name":"../toDate/index.js","loc":{"line":1,"column":19}},{"name":"../_lib/requiredArgs/index.js","loc":{"line":2,"column":25}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getDate;\n\nvar _index = require(\"../toDate/index.js\");\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require(\"../_lib/requiredArgs/index.js\");\n\nvar _index4 = _interopRequireDefault(_index3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name getDate\n * @category Day Helpers\n * @summary Get the day of the month of the given date.\n *\n * @description\n * Get the day of the month of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the month is 29 February 2012?\n * const result = getDate(new Date(2012, 1, 29))\n * //=> 29\n */\nfunction getDate(dirtyDate) {\n  (0, _index4.default)(1, arguments);\n  var date = (0, _index2.default)(dirtyDate);\n  var dayOfMonth = date.getDate();\n  return dayOfMonth;\n}","map":{"mappings":[{"name":"getDate","generated":{"line":6,"column":18},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":20,"column":24}},{"generated":{"line":8,"column":0},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":2,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":3,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":20,"column":15}},{"name":"getDate","generated":{"line":35,"column":9},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":20,"column":24}},{"generated":{"line":35,"column":16},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":20,"column":15}},{"name":"dirtyDate","generated":{"line":35,"column":17},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":20,"column":32}},{"generated":{"line":35,"column":26},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":20,"column":15}},{"generated":{"line":35,"column":28},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":20,"column":43}},{"generated":{"line":36,"column":0},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":21,"column":2}},{"generated":{"line":36,"column":23},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":21,"column":15}},{"generated":{"line":36,"column":24},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":21,"column":2}},{"name":"arguments","generated":{"line":36,"column":26},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":21,"column":18}},{"generated":{"line":36,"column":35},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":21,"column":2}},{"generated":{"line":37,"column":0},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":22,"column":2}},{"name":"date","generated":{"line":37,"column":6},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":22,"column":6}},{"generated":{"line":37,"column":13},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":22,"column":13}},{"name":"dirtyDate","generated":{"line":37,"column":34},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":22,"column":20}},{"generated":{"line":37,"column":43},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":22,"column":13}},{"generated":{"line":37,"column":44},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":22,"column":2}},{"generated":{"line":38,"column":0},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":23,"column":2}},{"name":"dayOfMonth","generated":{"line":38,"column":6},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":23,"column":6}},{"name":"date","generated":{"line":38,"column":19},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":23,"column":19}},{"name":"getDate","generated":{"line":38,"column":24},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":23,"column":24}},{"generated":{"line":38,"column":31},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":23,"column":19}},{"generated":{"line":38,"column":33},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":23,"column":2}},{"generated":{"line":39,"column":0},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":24,"column":2}},{"name":"dayOfMonth","generated":{"line":39,"column":9},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":24,"column":9}},{"generated":{"line":39,"column":19},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":24,"column":2}},{"generated":{"line":40,"column":0},"source":"node_modules/date-fns/esm/getDate/index.js","original":{"line":25,"column":1}}],"sources":{"node_modules/date-fns/esm/getDate/index.js":"import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDate\n * @category Day Helpers\n * @summary Get the day of the month of the given date.\n *\n * @description\n * Get the day of the month of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the month is 29 February 2012?\n * const result = getDate(new Date(2012, 1, 29))\n * //=> 29\n */\nexport default function getDate(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfMonth = date.getDate();\n  return dayOfMonth;\n}"},"lineCount":null}},"hash":"eadc9f3e5fa2101cc7d8bfc781c7bddb","cacheData":{"env":{}}}