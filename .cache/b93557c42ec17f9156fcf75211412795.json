{"dependencies":[{"name":"/Users/hansi/workdir/parcel-experiment/package.json","includedInParent":true,"mtime":1690295309730},{"name":"/Users/hansi/workdir/parcel-experiment/node_modules/date-fns/esm/getWeek/package.json","includedInParent":true,"mtime":1690293552587},{"name":"../startOfWeek/index.js","loc":{"line":1,"column":24}},{"name":"../startOfWeekYear/index.js","loc":{"line":2,"column":28}},{"name":"../toDate/index.js","loc":{"line":3,"column":19}},{"name":"../_lib/requiredArgs/index.js","loc":{"line":4,"column":25}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getWeek;\n\nvar _index = require(\"../startOfWeek/index.js\");\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require(\"../startOfWeekYear/index.js\");\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _index5 = require(\"../toDate/index.js\");\n\nvar _index6 = _interopRequireDefault(_index5);\n\nvar _index7 = require(\"../_lib/requiredArgs/index.js\");\n\nvar _index8 = _interopRequireDefault(_index7);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MILLISECONDS_IN_WEEK = 604800000;\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Number} the week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nfunction getWeek(dirtyDate, options) {\n  (0, _index8.default)(1, arguments);\n  var date = (0, _index6.default)(dirtyDate);\n  var diff = (0, _index2.default)(date, options).getTime() - (0, _index4.default)(date, options).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","map":{"mappings":[{"name":"getWeek","generated":{"line":6,"column":18},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":46,"column":24}},{"generated":{"line":8,"column":0},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":2,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":3,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":4,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":5,"column":0}},{"name":"MILLISECONDS_IN_WEEK","generated":{"line":26,"column":4},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":5,"column":4}},{"generated":{"line":26,"column":27},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":5,"column":27}},{"generated":{"line":26,"column":36},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":5,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":7,"column":0}},{"generated":{"line":67,"column":0},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":46,"column":15}},{"name":"getWeek","generated":{"line":67,"column":9},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":46,"column":24}},{"generated":{"line":67,"column":16},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":46,"column":15}},{"name":"dirtyDate","generated":{"line":67,"column":17},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":46,"column":32}},{"generated":{"line":67,"column":26},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":46,"column":15}},{"name":"options","generated":{"line":67,"column":28},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":46,"column":43}},{"generated":{"line":67,"column":35},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":46,"column":15}},{"generated":{"line":67,"column":37},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":46,"column":52}},{"generated":{"line":68,"column":0},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":47,"column":2}},{"generated":{"line":68,"column":23},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":47,"column":15}},{"generated":{"line":68,"column":24},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":47,"column":2}},{"name":"arguments","generated":{"line":68,"column":26},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":47,"column":18}},{"generated":{"line":68,"column":35},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":47,"column":2}},{"generated":{"line":69,"column":0},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":48,"column":2}},{"name":"date","generated":{"line":69,"column":6},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":48,"column":6}},{"generated":{"line":69,"column":13},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":48,"column":13}},{"name":"dirtyDate","generated":{"line":69,"column":34},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":48,"column":20}},{"generated":{"line":69,"column":43},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":48,"column":13}},{"generated":{"line":69,"column":44},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":48,"column":2}},{"generated":{"line":70,"column":0},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":49,"column":2}},{"name":"diff","generated":{"line":70,"column":6},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":49,"column":6}},{"generated":{"line":70,"column":13},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":49,"column":13}},{"name":"date","generated":{"line":70,"column":34},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":49,"column":25}},{"generated":{"line":70,"column":38},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":49,"column":13}},{"name":"options","generated":{"line":70,"column":40},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":49,"column":31}},{"generated":{"line":70,"column":47},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":49,"column":13}},{"name":"getTime","generated":{"line":70,"column":49},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":49,"column":40}},{"generated":{"line":70,"column":56},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":49,"column":13}},{"generated":{"line":70,"column":61},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":49,"column":52}},{"name":"date","generated":{"line":70,"column":82},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":49,"column":68}},{"generated":{"line":70,"column":86},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":49,"column":52}},{"name":"options","generated":{"line":70,"column":88},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":49,"column":74}},{"generated":{"line":70,"column":95},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":49,"column":52}},{"name":"getTime","generated":{"line":70,"column":97},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":49,"column":83}},{"generated":{"line":70,"column":104},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":49,"column":52}},{"generated":{"line":70,"column":106},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":49,"column":2}},{"generated":{"line":72,"column":0},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":51,"column":2}},{"generated":{"line":73,"column":0},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":52,"column":2}},{"generated":{"line":74,"column":0},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":53,"column":2}},{"generated":{"line":75,"column":0},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":54,"column":2}},{"name":"Math","generated":{"line":75,"column":9},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":54,"column":9}},{"name":"round","generated":{"line":75,"column":14},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":54,"column":14}},{"generated":{"line":75,"column":19},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":54,"column":9}},{"name":"diff","generated":{"line":75,"column":20},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":54,"column":20}},{"name":"MILLISECONDS_IN_WEEK","generated":{"line":75,"column":27},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":54,"column":27}},{"generated":{"line":75,"column":47},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":54,"column":9}},{"generated":{"line":75,"column":51},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":54,"column":51}},{"generated":{"line":75,"column":52},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":54,"column":2}},{"generated":{"line":76,"column":0},"source":"node_modules/date-fns/esm/getWeek/index.js","original":{"line":55,"column":1}}],"sources":{"node_modules/date-fns/esm/getWeek/index.js":"import startOfWeek from \"../startOfWeek/index.js\";\nimport startOfWeekYear from \"../startOfWeekYear/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Number} the week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport default function getWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfWeek(date, options).getTime() - startOfWeekYear(date, options).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}"},"lineCount":null}},"hash":"115b36d2c5709608a640200f8eb171cf","cacheData":{"env":{}}}