{"dependencies":[{"name":"/Users/hansi/workdir/parcel-experiment/package.json","includedInParent":true,"mtime":1690295309730},{"name":"/Users/hansi/workdir/parcel-experiment/node_modules/date-fns/esm/isWithinInterval/package.json","includedInParent":true,"mtime":1690293552609},{"name":"../toDate/index.js","loc":{"line":1,"column":19}},{"name":"../_lib/requiredArgs/index.js","loc":{"line":2,"column":25}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isWithinInterval;\n\nvar _index = require(\"../toDate/index.js\");\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require(\"../_lib/requiredArgs/index.js\");\n\nvar _index4 = _interopRequireDefault(_index3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name isWithinInterval\n * @category Interval Helpers\n * @summary Is the given date within the interval?\n *\n * @description\n * Is the given date within the interval? (Including start and end.)\n *\n * @param {Date|Number} date - the date to check\n * @param {Interval} interval - the interval to check\n * @returns {Boolean} the date is within the interval\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For the date within the interval:\n * isWithinInterval(new Date(2014, 0, 3), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> true\n *\n * @example\n * // For the date outside of the interval:\n * isWithinInterval(new Date(2014, 0, 10), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> false\n *\n * @example\n * // For date equal to interval start:\n * isWithinInterval(date, { start, end: date }) // => true\n *\n * @example\n * // For date equal to interval end:\n * isWithinInterval(date, { start: date, end }) // => true\n */\nfunction isWithinInterval(dirtyDate, interval) {\n  (0, _index4.default)(2, arguments);\n  var time = (0, _index2.default)(dirtyDate).getTime();\n  var startTime = (0, _index2.default)(interval.start).getTime();\n  var endTime = (0, _index2.default)(interval.end).getTime();\n\n  // Throw an exception if start date is after end date or if any date is `Invalid Date`\n  if (!(startTime <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n  return time >= startTime && time <= endTime;\n}","map":{"mappings":[{"name":"isWithinInterval","generated":{"line":6,"column":18},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":42,"column":24}},{"generated":{"line":8,"column":0},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":2,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":3,"column":0}},{"generated":{"line":57,"column":0},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":42,"column":15}},{"name":"isWithinInterval","generated":{"line":57,"column":9},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":42,"column":24}},{"generated":{"line":57,"column":25},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":42,"column":15}},{"name":"dirtyDate","generated":{"line":57,"column":26},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":42,"column":41}},{"generated":{"line":57,"column":35},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":42,"column":15}},{"name":"interval","generated":{"line":57,"column":37},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":42,"column":52}},{"generated":{"line":57,"column":45},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":42,"column":15}},{"generated":{"line":57,"column":47},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":42,"column":62}},{"generated":{"line":58,"column":0},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":43,"column":2}},{"generated":{"line":58,"column":23},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":43,"column":15}},{"generated":{"line":58,"column":24},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":43,"column":2}},{"name":"arguments","generated":{"line":58,"column":26},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":43,"column":18}},{"generated":{"line":58,"column":35},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":43,"column":2}},{"generated":{"line":59,"column":0},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":44,"column":2}},{"name":"time","generated":{"line":59,"column":6},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":44,"column":6}},{"generated":{"line":59,"column":13},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":44,"column":13}},{"name":"dirtyDate","generated":{"line":59,"column":34},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":44,"column":20}},{"generated":{"line":59,"column":43},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":44,"column":13}},{"name":"getTime","generated":{"line":59,"column":45},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":44,"column":31}},{"generated":{"line":59,"column":52},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":44,"column":13}},{"generated":{"line":59,"column":54},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":44,"column":2}},{"generated":{"line":60,"column":0},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":45,"column":2}},{"name":"startTime","generated":{"line":60,"column":6},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":45,"column":6}},{"generated":{"line":60,"column":18},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":45,"column":18}},{"name":"interval","generated":{"line":60,"column":39},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":45,"column":25}},{"name":"start","generated":{"line":60,"column":48},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":45,"column":34}},{"generated":{"line":60,"column":53},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":45,"column":18}},{"name":"getTime","generated":{"line":60,"column":55},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":45,"column":41}},{"generated":{"line":60,"column":62},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":45,"column":18}},{"generated":{"line":60,"column":64},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":45,"column":2}},{"generated":{"line":61,"column":0},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":46,"column":2}},{"name":"endTime","generated":{"line":61,"column":6},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":46,"column":6}},{"generated":{"line":61,"column":16},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":46,"column":16}},{"name":"interval","generated":{"line":61,"column":37},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":46,"column":23}},{"name":"end","generated":{"line":61,"column":46},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":46,"column":32}},{"generated":{"line":61,"column":49},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":46,"column":16}},{"name":"getTime","generated":{"line":61,"column":51},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":46,"column":37}},{"generated":{"line":61,"column":58},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":46,"column":16}},{"generated":{"line":61,"column":60},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":46,"column":2}},{"generated":{"line":63,"column":0},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":48,"column":2}},{"generated":{"line":64,"column":0},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":49,"column":2}},{"generated":{"line":64,"column":6},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":49,"column":6}},{"name":"startTime","generated":{"line":64,"column":8},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":49,"column":8}},{"name":"endTime","generated":{"line":64,"column":21},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":49,"column":21}},{"generated":{"line":64,"column":28},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":49,"column":6}},{"generated":{"line":64,"column":29},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":49,"column":2}},{"generated":{"line":64,"column":31},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":49,"column":31}},{"generated":{"line":65,"column":0},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":50,"column":4}},{"generated":{"line":65,"column":10},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":50,"column":10}},{"name":"RangeError","generated":{"line":65,"column":14},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":50,"column":14}},{"generated":{"line":65,"column":24},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":50,"column":10}},{"generated":{"line":65,"column":25},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":50,"column":25}},{"generated":{"line":65,"column":43},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":50,"column":10}},{"generated":{"line":65,"column":44},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":50,"column":4}},{"generated":{"line":66,"column":0},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":51,"column":3}},{"generated":{"line":67,"column":0},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":52,"column":2}},{"name":"time","generated":{"line":67,"column":9},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":52,"column":9}},{"name":"startTime","generated":{"line":67,"column":17},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":52,"column":17}},{"generated":{"line":67,"column":26},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":52,"column":9}},{"name":"time","generated":{"line":67,"column":30},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":52,"column":30}},{"name":"endTime","generated":{"line":67,"column":38},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":52,"column":38}},{"generated":{"line":67,"column":45},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":52,"column":2}},{"generated":{"line":68,"column":0},"source":"node_modules/date-fns/esm/isWithinInterval/index.js","original":{"line":53,"column":1}}],"sources":{"node_modules/date-fns/esm/isWithinInterval/index.js":"import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isWithinInterval\n * @category Interval Helpers\n * @summary Is the given date within the interval?\n *\n * @description\n * Is the given date within the interval? (Including start and end.)\n *\n * @param {Date|Number} date - the date to check\n * @param {Interval} interval - the interval to check\n * @returns {Boolean} the date is within the interval\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For the date within the interval:\n * isWithinInterval(new Date(2014, 0, 3), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> true\n *\n * @example\n * // For the date outside of the interval:\n * isWithinInterval(new Date(2014, 0, 10), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> false\n *\n * @example\n * // For date equal to interval start:\n * isWithinInterval(date, { start, end: date }) // => true\n *\n * @example\n * // For date equal to interval end:\n * isWithinInterval(date, { start: date, end }) // => true\n */\nexport default function isWithinInterval(dirtyDate, interval) {\n  requiredArgs(2, arguments);\n  var time = toDate(dirtyDate).getTime();\n  var startTime = toDate(interval.start).getTime();\n  var endTime = toDate(interval.end).getTime();\n\n  // Throw an exception if start date is after end date or if any date is `Invalid Date`\n  if (!(startTime <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n  return time >= startTime && time <= endTime;\n}"},"lineCount":null}},"hash":"27bb0b57b1ed96b089b702482dcf376e","cacheData":{"env":{}}}