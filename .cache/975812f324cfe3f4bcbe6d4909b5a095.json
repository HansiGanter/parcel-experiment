{"dependencies":[{"name":"/Users/hansi/workdir/parcel-experiment/package.json","includedInParent":true,"mtime":1690295309730},{"name":"/Users/hansi/workdir/parcel-experiment/node_modules/date-fns/esm/isTomorrow/package.json","includedInParent":true,"mtime":1690293552607},{"name":"../addDays/index.js","loc":{"line":1,"column":20}},{"name":"../isSameDay/index.js","loc":{"line":2,"column":22}},{"name":"../_lib/requiredArgs/index.js","loc":{"line":3,"column":25}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isTomorrow;\n\nvar _index = require(\"../addDays/index.js\");\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require(\"../isSameDay/index.js\");\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _index5 = require(\"../_lib/requiredArgs/index.js\");\n\nvar _index6 = _interopRequireDefault(_index5);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name isTomorrow\n * @category Day Helpers\n * @summary Is the given date tomorrow?\n * @pure false\n *\n * @description\n * Is the given date tomorrow?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is tomorrow\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 7 October 14:00:00 tomorrow?\n * const result = isTomorrow(new Date(2014, 9, 7, 14, 0))\n * //=> true\n */\nfunction isTomorrow(dirtyDate) {\n  (0, _index6.default)(1, arguments);\n  return (0, _index4.default)(dirtyDate, (0, _index2.default)(Date.now(), 1));\n}","map":{"mappings":[{"name":"isTomorrow","generated":{"line":6,"column":18},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":25,"column":24}},{"generated":{"line":8,"column":0},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":2,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":3,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":4,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":25,"column":15}},{"name":"isTomorrow","generated":{"line":43,"column":9},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":25,"column":24}},{"generated":{"line":43,"column":19},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":25,"column":15}},{"name":"dirtyDate","generated":{"line":43,"column":20},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":25,"column":35}},{"generated":{"line":43,"column":29},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":25,"column":15}},{"generated":{"line":43,"column":31},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":25,"column":46}},{"generated":{"line":44,"column":0},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":26,"column":2}},{"generated":{"line":44,"column":23},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":26,"column":15}},{"generated":{"line":44,"column":24},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":26,"column":2}},{"name":"arguments","generated":{"line":44,"column":26},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":26,"column":18}},{"generated":{"line":44,"column":35},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":26,"column":2}},{"generated":{"line":45,"column":0},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":27,"column":2}},{"generated":{"line":45,"column":9},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":27,"column":9}},{"name":"dirtyDate","generated":{"line":45,"column":30},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":27,"column":19}},{"generated":{"line":45,"column":39},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":27,"column":9}},{"generated":{"line":45,"column":41},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":27,"column":30}},{"name":"Date","generated":{"line":45,"column":62},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":27,"column":38}},{"name":"now","generated":{"line":45,"column":67},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":27,"column":43}},{"generated":{"line":45,"column":70},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":27,"column":38}},{"generated":{"line":45,"column":72},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":27,"column":30}},{"generated":{"line":45,"column":74},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":27,"column":50}},{"generated":{"line":45,"column":75},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":27,"column":30}},{"generated":{"line":45,"column":76},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":27,"column":9}},{"generated":{"line":45,"column":77},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":27,"column":2}},{"generated":{"line":46,"column":0},"source":"node_modules/date-fns/esm/isTomorrow/index.js","original":{"line":28,"column":1}}],"sources":{"node_modules/date-fns/esm/isTomorrow/index.js":"import addDays from \"../addDays/index.js\";\nimport isSameDay from \"../isSameDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isTomorrow\n * @category Day Helpers\n * @summary Is the given date tomorrow?\n * @pure false\n *\n * @description\n * Is the given date tomorrow?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is tomorrow\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 7 October 14:00:00 tomorrow?\n * const result = isTomorrow(new Date(2014, 9, 7, 14, 0))\n * //=> true\n */\nexport default function isTomorrow(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, addDays(Date.now(), 1));\n}"},"lineCount":null}},"hash":"4d35f9d4f9c701e84107f90b49466a43","cacheData":{"env":{}}}