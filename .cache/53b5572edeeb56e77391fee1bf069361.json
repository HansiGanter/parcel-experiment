{"dependencies":[{"name":"/Users/hansi/workdir/parcel-experiment/package.json","includedInParent":true,"mtime":1690295309730},{"name":"/Users/hansi/workdir/parcel-experiment/node_modules/date-fns/esm/isSameWeek/package.json","includedInParent":true,"mtime":1690293552601},{"name":"../startOfWeek/index.js","loc":{"line":1,"column":24}},{"name":"../_lib/requiredArgs/index.js","loc":{"line":2,"column":25}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isSameWeek;\n\nvar _index = require(\"../startOfWeek/index.js\");\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require(\"../_lib/requiredArgs/index.js\");\n\nvar _index4 = _interopRequireDefault(_index3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name isSameWeek\n * @category Week Helpers\n * @summary Are the given dates in the same week (and month and year)?\n *\n * @description\n * Are the given dates in the same week (and month and year)?\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the dates are in the same week (and month and year)\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n *   weekStartsOn: 1\n * })\n * //=> false\n *\n * @example\n * // Are 1 January 2014 and 1 January 2015 in the same week?\n * const result = isSameWeek(new Date(2014, 0, 1), new Date(2015, 0, 1))\n * //=> false\n */\nfunction isSameWeek(dirtyDateLeft, dirtyDateRight, options) {\n  (0, _index4.default)(2, arguments);\n  var dateLeftStartOfWeek = (0, _index2.default)(dirtyDateLeft, options);\n  var dateRightStartOfWeek = (0, _index2.default)(dirtyDateRight, options);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}","map":{"mappings":[{"name":"isSameWeek","generated":{"line":6,"column":18},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":38,"column":24}},{"generated":{"line":8,"column":0},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":2,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":3,"column":0}},{"generated":{"line":53,"column":0},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":38,"column":15}},{"name":"isSameWeek","generated":{"line":53,"column":9},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":38,"column":24}},{"generated":{"line":53,"column":19},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":38,"column":15}},{"name":"dirtyDateLeft","generated":{"line":53,"column":20},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":38,"column":35}},{"generated":{"line":53,"column":33},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":38,"column":15}},{"name":"dirtyDateRight","generated":{"line":53,"column":35},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":38,"column":50}},{"generated":{"line":53,"column":49},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":38,"column":15}},{"name":"options","generated":{"line":53,"column":51},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":38,"column":66}},{"generated":{"line":53,"column":58},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":38,"column":15}},{"generated":{"line":53,"column":60},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":38,"column":75}},{"generated":{"line":54,"column":0},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":39,"column":2}},{"generated":{"line":54,"column":23},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":39,"column":15}},{"generated":{"line":54,"column":24},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":39,"column":2}},{"name":"arguments","generated":{"line":54,"column":26},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":39,"column":18}},{"generated":{"line":54,"column":35},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":39,"column":2}},{"generated":{"line":55,"column":0},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":40,"column":2}},{"name":"dateLeftStartOfWeek","generated":{"line":55,"column":6},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":40,"column":6}},{"generated":{"line":55,"column":28},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":40,"column":28}},{"name":"dirtyDateLeft","generated":{"line":55,"column":49},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":40,"column":40}},{"generated":{"line":55,"column":62},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":40,"column":28}},{"name":"options","generated":{"line":55,"column":64},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":40,"column":55}},{"generated":{"line":55,"column":71},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":40,"column":28}},{"generated":{"line":55,"column":72},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":40,"column":2}},{"generated":{"line":56,"column":0},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":41,"column":2}},{"name":"dateRightStartOfWeek","generated":{"line":56,"column":6},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":41,"column":6}},{"generated":{"line":56,"column":29},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":41,"column":29}},{"name":"dirtyDateRight","generated":{"line":56,"column":50},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":41,"column":41}},{"generated":{"line":56,"column":64},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":41,"column":29}},{"name":"options","generated":{"line":56,"column":66},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":41,"column":57}},{"generated":{"line":56,"column":73},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":41,"column":29}},{"generated":{"line":56,"column":74},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":41,"column":2}},{"generated":{"line":57,"column":0},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":42,"column":2}},{"name":"dateLeftStartOfWeek","generated":{"line":57,"column":9},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":42,"column":9}},{"name":"getTime","generated":{"line":57,"column":29},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":42,"column":29}},{"generated":{"line":57,"column":36},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":42,"column":9}},{"name":"dateRightStartOfWeek","generated":{"line":57,"column":43},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":42,"column":43}},{"name":"getTime","generated":{"line":57,"column":64},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":42,"column":64}},{"generated":{"line":57,"column":71},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":42,"column":43}},{"generated":{"line":57,"column":73},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":42,"column":2}},{"generated":{"line":58,"column":0},"source":"node_modules/date-fns/esm/isSameWeek/index.js","original":{"line":43,"column":1}}],"sources":{"node_modules/date-fns/esm/isSameWeek/index.js":"import startOfWeek from \"../startOfWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameWeek\n * @category Week Helpers\n * @summary Are the given dates in the same week (and month and year)?\n *\n * @description\n * Are the given dates in the same week (and month and year)?\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the dates are in the same week (and month and year)\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n *   weekStartsOn: 1\n * })\n * //=> false\n *\n * @example\n * // Are 1 January 2014 and 1 January 2015 in the same week?\n * const result = isSameWeek(new Date(2014, 0, 1), new Date(2015, 0, 1))\n * //=> false\n */\nexport default function isSameWeek(dirtyDateLeft, dirtyDateRight, options) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfWeek = startOfWeek(dirtyDateLeft, options);\n  var dateRightStartOfWeek = startOfWeek(dirtyDateRight, options);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}"},"lineCount":null}},"hash":"84d8eb7ebf4baf1ee812f56641d49e87","cacheData":{"env":{}}}