{"dependencies":[{"name":"/Users/hansi/workdir/parcel-experiment/package.json","includedInParent":true,"mtime":1690295309730},{"name":"/Users/hansi/workdir/parcel-experiment/node_modules/date-fns/esm/setWeek/package.json","includedInParent":true,"mtime":1690293552676},{"name":"../getWeek/index.js","loc":{"line":1,"column":20}},{"name":"../toDate/index.js","loc":{"line":2,"column":19}},{"name":"../_lib/requiredArgs/index.js","loc":{"line":3,"column":25}},{"name":"../_lib/toInteger/index.js","loc":{"line":4,"column":22}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = setWeek;\n\nvar _index = require(\"../getWeek/index.js\");\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require(\"../toDate/index.js\");\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _index5 = require(\"../_lib/requiredArgs/index.js\");\n\nvar _index6 = _interopRequireDefault(_index5);\n\nvar _index7 = require(\"../_lib/toInteger/index.js\");\n\nvar _index8 = _interopRequireDefault(_index7);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} week - the week of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the new date with the local week set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * const result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * const result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */\nfunction setWeek(dirtyDate, dirtyWeek, options) {\n  (0, _index6.default)(2, arguments);\n  var date = (0, _index4.default)(dirtyDate);\n  var week = (0, _index8.default)(dirtyWeek);\n  var diff = (0, _index2.default)(date, options) - week;\n  date.setDate(date.getDate() - diff * 7);\n  return date;\n}","map":{"mappings":[{"name":"setWeek","generated":{"line":6,"column":18},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":45,"column":24}},{"generated":{"line":8,"column":0},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":2,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":3,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":4,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":5,"column":0}},{"generated":{"line":66,"column":0},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":45,"column":15}},{"name":"setWeek","generated":{"line":66,"column":9},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":45,"column":24}},{"generated":{"line":66,"column":16},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":45,"column":15}},{"name":"dirtyDate","generated":{"line":66,"column":17},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":45,"column":32}},{"generated":{"line":66,"column":26},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":45,"column":15}},{"name":"dirtyWeek","generated":{"line":66,"column":28},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":45,"column":43}},{"generated":{"line":66,"column":37},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":45,"column":15}},{"name":"options","generated":{"line":66,"column":39},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":45,"column":54}},{"generated":{"line":66,"column":46},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":45,"column":15}},{"generated":{"line":66,"column":48},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":45,"column":63}},{"generated":{"line":67,"column":0},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":46,"column":2}},{"generated":{"line":67,"column":23},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":46,"column":15}},{"generated":{"line":67,"column":24},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":46,"column":2}},{"name":"arguments","generated":{"line":67,"column":26},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":46,"column":18}},{"generated":{"line":67,"column":35},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":46,"column":2}},{"generated":{"line":68,"column":0},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":47,"column":2}},{"name":"date","generated":{"line":68,"column":6},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":47,"column":6}},{"generated":{"line":68,"column":13},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":47,"column":13}},{"name":"dirtyDate","generated":{"line":68,"column":34},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":47,"column":20}},{"generated":{"line":68,"column":43},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":47,"column":13}},{"generated":{"line":68,"column":44},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":47,"column":2}},{"generated":{"line":69,"column":0},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":48,"column":2}},{"name":"week","generated":{"line":69,"column":6},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":48,"column":6}},{"generated":{"line":69,"column":13},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":48,"column":13}},{"name":"dirtyWeek","generated":{"line":69,"column":34},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":48,"column":23}},{"generated":{"line":69,"column":43},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":48,"column":13}},{"generated":{"line":69,"column":44},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":48,"column":2}},{"generated":{"line":70,"column":0},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":49,"column":2}},{"name":"diff","generated":{"line":70,"column":6},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":49,"column":6}},{"generated":{"line":70,"column":13},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":49,"column":13}},{"name":"date","generated":{"line":70,"column":34},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":49,"column":21}},{"generated":{"line":70,"column":38},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":49,"column":13}},{"name":"options","generated":{"line":70,"column":40},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":49,"column":27}},{"generated":{"line":70,"column":47},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":49,"column":13}},{"name":"week","generated":{"line":70,"column":51},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":49,"column":38}},{"generated":{"line":70,"column":55},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":49,"column":2}},{"name":"date","generated":{"line":71,"column":0},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":50,"column":2}},{"name":"setDate","generated":{"line":71,"column":7},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":50,"column":7}},{"generated":{"line":71,"column":14},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":50,"column":2}},{"name":"date","generated":{"line":71,"column":15},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":50,"column":15}},{"name":"getDate","generated":{"line":71,"column":20},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":50,"column":20}},{"generated":{"line":71,"column":27},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":50,"column":15}},{"name":"diff","generated":{"line":71,"column":32},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":50,"column":32}},{"generated":{"line":71,"column":39},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":50,"column":39}},{"generated":{"line":71,"column":40},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":50,"column":2}},{"generated":{"line":72,"column":0},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":51,"column":2}},{"name":"date","generated":{"line":72,"column":9},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":51,"column":9}},{"generated":{"line":72,"column":13},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":51,"column":2}},{"generated":{"line":73,"column":0},"source":"node_modules/date-fns/esm/setWeek/index.js","original":{"line":52,"column":1}}],"sources":{"node_modules/date-fns/esm/setWeek/index.js":"import getWeek from \"../getWeek/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} week - the week of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the new date with the local week set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * const result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * const result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */\nexport default function setWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getWeek(date, options) - week;\n  date.setDate(date.getDate() - diff * 7);\n  return date;\n}"},"lineCount":null}},"hash":"917d80571118a183bfab606806b7a137","cacheData":{"env":{}}}